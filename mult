-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-- multiplica por 1: A(15..0)*B(i) => S(16..0)
-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library IEEE; use IEEE.std_logic_1164.all; use work.p_wires.all;

entity m_p_1 is
  port(A, B : in  reg32;                -- entradas A,B
       S : in bit;                      -- bit por multiplicar
       R : out reg33);                  -- produto parcial
end m_p_1;

architecture funcional of m_p_1 is 

component adder32 is
  port(inpA, inpB : in reg32;
       outC : out reg32;
       vem  : in  bit;    --https://www.linuxmint.com/start/sarah/
       vai  : out bit
       );
end component adder32;

  signal somaAB : reg33;

begin

  U_soma: adder32
    port map(A, B , somaAB(31 downto 0), '0', somaAB(32)); 

  -- defina a constante t_mux2 em packageWires.vhd
  R <= somaAB when S = '1' else ('0' & B) ;

end funcional;
-- -------------------------------------------------------------------


-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-- multiplicador combinacional
-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library IEEE; use IEEE.std_logic_1164.all; use IEEE.numeric_std.all;
use work.p_wires.all;

entity mult16x16 is
  port(A, B : in  reg32;   -- entradas A,B
       prod : out reg32);  -- produto
end mult16x16;


-- ------------------------------------------------------------------
-- descomente as linhas com --x para acrescentar o cÃ³digo do multiplicador
-- ------------------------------------------------------------------

 architecture estrutural of mult16x16 is 
 
   component m_p_1 is port(A,B : in  bit_vector;   -- reg16
                           S   : in  bit;
                           R   : out bit_vector);  -- reg17
   end component m_p_1;
 
   signal p01,p02,p03,p04,p05,p06,p07,p08: reg33;
   signal p09,p10,p11,p12,p13,p14,p15,p16: reg33;
   signal p17,p18,p19,p20,p21,p22,p23,p24: reg33;
   signal p25,p26,p27,p28,p29,p30,p31,p32: reg33;
 
 begin
 
 U_00: m_p_1 port map (A, X"00000000", B(0) ,p01);
 U_01: m_p_1 port map (A, p01(32 downto 1), B(1), p02);
 U_02: m_p_1 port map (A, p02(32 downto 1), B(2), p03);
 U_03: m_p_1 port map (A, p03(32 downto 1), B(3), p04);
 U_04: m_p_1 port map (A, p04(32 downto 1), B(4), p05);
 U_05: m_p_1 port map (A, p05(32 downto 1), B(5), p06);
 U_06: m_p_1 port map (A, p06(32 downto 1), B(6), p07);
 U_07: m_p_1 port map (A, p07(32 downto 1), B(7), p08);
 U_08: m_p_1 port map (A, p08(32 downto 1), B(8), p09);
 U_09: m_p_1 port map (A, p09(32 downto 1), B(9), p10);
 U_10: m_p_1 port map (A, p10(32 downto 1), B(10), p11);
 U_11: m_p_1 port map (A, p11(32 downto 1), B(11), p12);
 U_12: m_p_1 port map (A, p12(32 downto 1), B(12), p13);
 U_13: m_p_1 port map (A, p13(32 downto 1), B(13), p14);
 U_14: m_p_1 port map (A, p14(32 downto 1), B(14), p15);
 U_15: m_p_1 port map (A, p15(32 downto 1), B(15), p16);
 U_16: m_p_1 port map (A, p16(32 downto 1), B(16), p17);
 U_17: m_p_1 port map (A, p17(32 downto 1), B(17), p18);
 U_18: m_p_1 port map (A, p18(32 downto 1), B(18), p19);
 U_19: m_p_1 port map (A, p19(32 downto 1), B(19), p20);
 U_20: m_p_1 port map (A, p20(32 downto 1), B(20), p21); 
 U_21: m_p_1 port map (A, p21(32 downto 1), B(21), p22);
 U_22: m_p_1 port map (A, p22(32 downto 1), B(22), p23);
 U_23: m_p_1 port map (A, p23(32 downto 1), B(23), p24);
 U_24: m_p_1 port map (A, p24(32 downto 1), B(24), p25);
 U_25: m_p_1 port map (A, p25(32 downto 1), B(25), p26);
 U_26: m_p_1 port map (A, p26(32 downto 1), B(26), p27);
 U_27: m_p_1 port map (A, p27(32 downto 1), B(27), p28);
 U_28: m_p_1 port map (A, p28(32 downto 1), B(28), p29);
 U_29: m_p_1 port map (A, p29(32 downto 1), B(29), p30);
 U_30: m_p_1 port map (A, p30(32 downto 1), B(30), p31);
 U_31: m_p_1 port map (A, p31(32 downto 1), B(31), p32);

 
 
 prod <=  p32(0) & p31(0) &  p30(0) & p29(0) &  P28(0) & p27(0) & p26(0) &  p25(0) & p24(0) & p23(0) & 
		  p22(0) & p21(0) &  p20(0) & p19(0) &  p18(0) & p17(0) & 
		  p16(0) & p15(0) &  p14(0) & p13(0) &  p12(0) & p11(0) &  p10(0) & p09(0) &
		  p08(0) & p07(0) &  p06(0) & p05(0) &  p04(0) & p03(0) &  p02(0) & p01(0);
   
 end estrutural;
--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
